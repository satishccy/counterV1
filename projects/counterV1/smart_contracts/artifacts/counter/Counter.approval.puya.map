{
  "version": 3,
  "sources": [
    "../../counter/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;;;AACQ;AAAe;AAAf;;AAJR;;;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;AAMK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAIA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAVL;;AAAA;;;;;;;;;AAAA;AAAA;AAMA;;;AAEQ;AAAA;AAAA;AAAA;AAAgB;AAAhB;AAAA;AAAA;AAAA;;AAER;;;AAEQ;AAAA;AAAA;AAAA;AAAgB;AAAhB;AAAA;AAAA;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.counter.contract.Counter.approval_program",
      "params": {},
      "block": "smart_contracts.counter.contract.Counter.approval_program",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"counter\""
    },
    "15": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "17": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "20": {
      "callsub": "smart_contracts.counter.contract.Counter.__init__",
      "op": "callsub __init__"
    },
    "23": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "smart_contracts.counter.contract.Counter.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "26": {
      "op": "return",
      "stack_out": []
    },
    "27": {
      "subroutine": "smart_contracts.counter.contract.Counter.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "30": {
      "op": "bytec_0 // \"counter\"",
      "defined_out": [
        "\"counter\""
      ],
      "stack_out": [
        "\"counter\""
      ]
    },
    "31": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"counter\"",
        "0"
      ],
      "stack_out": [
        "\"counter\"",
        "0"
      ]
    },
    "32": {
      "op": "app_global_put",
      "stack_out": []
    },
    "33": {
      "retsub": true,
      "op": "retsub"
    },
    "34": {
      "subroutine": "smart_contracts.counter.contract.Counter.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "37": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "39": {
      "op": "bz __puya_arc4_router___bare_routing@6",
      "stack_out": []
    },
    "42": {
      "op": "pushbytess 0x2fa47328 0x4b5bddfd // method \"increment()void\", method \"decrement()void\""
    },
    "54": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(decrement()void)",
        "Method(increment()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(increment()void)",
        "Method(decrement()void)",
        "tmp%2#0"
      ]
    },
    "57": {
      "op": "match __puya_arc4_router___increment_route@2 __puya_arc4_router___decrement_route@3",
      "stack_out": []
    },
    "63": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "64": {
      "retsub": true,
      "op": "retsub"
    },
    "65": {
      "block": "__puya_arc4_router___increment_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "67": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "68": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "69": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "71": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "72": {
      "callsub": "smart_contracts.counter.contract.Counter.increment",
      "op": "callsub increment"
    },
    "75": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "76": {
      "retsub": true,
      "op": "retsub"
    },
    "77": {
      "block": "__puya_arc4_router___decrement_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "79": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "80": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "81": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "83": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "84": {
      "callsub": "smart_contracts.counter.contract.Counter.decrement",
      "op": "callsub decrement"
    },
    "87": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "88": {
      "retsub": true,
      "op": "retsub"
    },
    "89": {
      "block": "__puya_arc4_router___bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "91": {
      "op": "bnz __puya_arc4_router___after_if_else@10",
      "stack_out": []
    },
    "94": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "96": {
      "op": "!",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "97": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "98": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "99": {
      "retsub": true,
      "op": "retsub"
    },
    "100": {
      "block": "__puya_arc4_router___after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "101": {
      "retsub": true,
      "op": "retsub"
    },
    "102": {
      "subroutine": "smart_contracts.counter.contract.Counter.increment",
      "params": {},
      "block": "increment",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "105": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "106": {
      "op": "bytec_0 // \"counter\"",
      "defined_out": [
        "\"counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"counter\""
      ]
    },
    "107": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "108": {
      "error": "check self.counter exists",
      "op": "assert // check self.counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "109": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "110": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "111": {
      "op": "bytec_0 // \"counter\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"counter\""
      ]
    },
    "112": {
      "op": "swap",
      "stack_out": [
        "\"counter\"",
        "new_state_value%0#0"
      ]
    },
    "113": {
      "op": "app_global_put",
      "stack_out": []
    },
    "114": {
      "retsub": true,
      "op": "retsub"
    },
    "115": {
      "subroutine": "smart_contracts.counter.contract.Counter.decrement",
      "params": {},
      "block": "decrement",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "118": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "119": {
      "op": "bytec_0 // \"counter\"",
      "defined_out": [
        "\"counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"counter\""
      ]
    },
    "120": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "121": {
      "error": "check self.counter exists",
      "op": "assert // check self.counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "122": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "123": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "124": {
      "op": "bytec_0 // \"counter\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"counter\""
      ]
    },
    "125": {
      "op": "swap",
      "stack_out": [
        "\"counter\"",
        "new_state_value%0#0"
      ]
    },
    "126": {
      "op": "app_global_put",
      "stack_out": []
    },
    "127": {
      "retsub": true,
      "op": "retsub"
    }
  }
}